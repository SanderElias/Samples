import{e as c}from"./chunk-BBNGRJLE.js";import{b as p,c as m}from"./chunk-B7V655EI.js";import{B as q,E as S,F as a,L as v,Mc as x,P as F,V as h,W as A,X as I,_ as O,ba as f,d as g,g as d,ga as u,i as y,k as b,n as j,pa as k,s as o,t as w}from"./chunk-T5E62NYD.js";var N=(()=>{class r{constructor(){this.mqtt=import("./mqtt.esm-QZZS7UDG.js"),this.client=this.mqtt.then(e=>e.default.connectAsync("ws://kapow:1884")),this.baseTopic="zigbee2mqtt",this.messages$=new g(e=>{let t=(n,s)=>{try{e.next({topic:n,message:JSON.parse(s.toString())})}catch{e.next({topic:n,message:s.toString()})}};return this.client.then(n=>{console.log("start listening for MQTT messages"),n.on("message",t)}),()=>{this.client.then(n=>{n.off("message",t),n.end(),console.log("MQTT client disconnected")})}}).pipe(h({connector:()=>new d,resetOnComplete:!0})),this.activeTopics=new Map}listenFor(e){let t=this.client;if(typeof e!="string")return console.warn("listenFor expects a string topic, got",e),b;e=e.startsWith(this.baseTopic)?e:`${this.baseTopic}/${e}`;let n=this.activeTopics;if(n.has(e))return n.get(e);let s=this.messages$.pipe(a(({topic:i})=>Array.isArray(i)?i.includes(e):i===e),o(({message:i})=>i),v(100),F(c),O({error(){t.then(i=>i.unsubscribe(e)),n.delete(e),console.log("stopped listening due of error for",e)},complete(){t.then(i=>i.unsubscribe(e)),n.delete(e),console.log("stopped listening for",e)}}),h({connector:()=>new y(1),resetOnComplete:!0,resetOnRefCountZero:()=>q(1005)}));return this.activeTopics.set(e,s),t.then(i=>{i.subscribe([e])}),s}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=f({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();var Q=(()=>{class r{constructor(){this.mqtt=u(N),this.injector=u(k),this.devices=p(this.mqtt.listenFor("bridge/devices"),{initialValue:[],debugName:"ZigbeeServiceDevices"}),this.getDeviceInfo=e=>x(()=>this.#e(e()),{equal:c}),this.getDeviceStatus=e=>m({params:()=>this.#e(e()),stream:({params:t})=>t&&t.friendly_name?this.mqtt.listenFor(`zigbee2mqtt/${t.friendly_name}`):S,injector:this.injector}),this.getStatus=e=>m({params:()=>$(typeof e=="string"?e:e()),stream:({params:t})=>this.mqtt.listenFor(t),injector:this.injector}),this.getMultipleStatuses=e=>m({params:()=>$(e()),stream:({params:t})=>!t||t.length===0?j([]):w(t.map(n=>this.mqtt.listenFor(n).pipe(I(null)))).pipe(o(n=>n.map((s,i)=>typeof s!="object"||s===null?{friendly_name:t[i],power:0,energy:0,current:0}:{friendly_name:t[i],power:s.power??0,energy:s.energy??0,current:s.current??0}))),injector:this.injector,equal:c}),this.#t=this.mqtt.listenFor("bridge/logging").pipe(a(e=>e&&typeof e.message=="string"&&["permit_join","zh:ember: [stack status] network","disabling joining new devices"].some(t=>e.message.toLowerCase().includes(t))),o(E),A(1)),this.joinAllowed=p(this.#t,{initialValue:!1}),this.publish=async(e,t)=>(typeof t!="string"&&(t=JSON.stringify(t)),(await this.mqtt.client).publishAsync(e,t)),this.#e=e=>this.devices().find(t=>t.ieee_address===e||t.friendly_name===e)}#t;#e;static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=f({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();function E(r){let l=r.message?.toLowerCase();console.log({lowerLog:l});let e=l?.split("payload '");if(e&&e.length>1)try{let n=JSON.parse(e[1].split("'")[0])?.data?.time??0;return typeof n=="number"&&n>0}catch{return!1}return!!l.includes("open")}var $=r=>{if(!(Array.isArray(r)&&r.length===0)&&r!==null&&!(typeof r=="object"&&Object.keys(r).length===0)&&!(typeof r=="string"&&r.trim()==="")&&!(typeof r=="number"&&(isNaN(r)||r===0)))return r};export{N as a,Q as b};
