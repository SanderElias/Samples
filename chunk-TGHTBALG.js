import{c as M,d as T,e as k,f as N,g as b,h as R}from"./chunk-A6FXIUYI.js";import{d as u}from"./chunk-XZV7KFRX.js";import{b as I}from"./chunk-ZSKYQKA7.js";import{Ic as y,Jc as v,Kc as j,aa as g,fa as m,pa as x,ua as h}from"./chunk-YDUWCTK6.js";import{a as c,b as f}from"./chunk-DAQOROHW.js";function p(s,n=""){return Object.entries(s).reduce((e,[r,t])=>b(t)?c(c({},e),p(t,`${n}${r}.`)):Array.isArray(t)?c(c({},e),S(t,`${n}${r}.`)):f(c({},e),{[`${n}${r}`]:t}),{})}function S(s,n=""){return s.reduce((e,r,t)=>b(r)?c(c({},e),p(r,`${n}${t}.`)):Array.isArray(r)?c(c({},e),S(r,`${n}${t}.`)):f(c({},e),{[`${n}${t}`]:r}),{})}function C(s){return Object.entries(s).reduce((n,[e,r])=>{let t=e.split("."),o=t.pop(),i=n;for(let a=0;a<t.length;a++){let d=t[a],D=t[a+1]??o;i=i[d]??=N(D)?[]:{}}return i[o]=r,n},{})}var B=(s,n=new Map,e={})=>{let r=m(x),t=u(()=>{},{injector:r,defaultValue:{}}),o=i=>{if(i===""||i===void 0||i==="-1")return t;let a=`${s}/${i}`;return n.has(a)||y(()=>{let d=u(()=>c({url:`${s}/${i}`},e),{injector:r,defaultValue:{id:i}});n.set(a,d)}),n.get(a)};return i=>v(()=>o(i()))};var E=(()=>{class s{constructor(){this.shown=h(!1),this.message=h(""),this.template=h(void 0),this.title=h("Sorry, something went wrong"),this.type=h("error"),this.dismissButtonText=h("dismiss"),this.showTemplate=e=>{this.template.set(e),this.shown.set(!0)},this.show=({message:e="",title:r=this.title(),type:t=this.type(),dismissButtonText:o=this.dismissButtonText()})=>{this.message.set(e),r&&this.title.set(r),this.type.set(t),this.dismissButtonText.set(o),this.shown.set(!0)},this.close=()=>{this.shown.set(!1),this.template.set(void 0),this.message.set(""),this.type.set("error"),this.title.set("Sorry, something went wrong"),this.dismissButtonText.set("dismiss")},this.isShown=()=>this.shown()}static{this.\u0275fac=function(r){return new(r||s)}}static{this.\u0275prov=g({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();var U=(s,n)=>{let e=p(s),r=p(n),t={};for(let o in e)e[o]!==r[o]&&(t[o]=r[o]??e[o]);for(let o in r)o in e||(t[o]=r[o]);return C(t)};var O=`Basic ${btoa("admin:password")}`,l={Authorization:O,"Content-Type":"application/json"},w={headers:l},de=(()=>{class s{constructor(){this.baseUrl="http://127.0.0.1:5984/relations",this.#s=m(T),this.#t=m(E),this.#e=new Map,this.filter=h(""),this.#o=M(()=>`(?i)${this.filter()}`,{delay:250}),this.#n=h(0),this.sort=h("name"),this.order=h("asc"),this.#r=u(()=>({url:`${this.baseUrl}/_find?v=${this.#n()}`,method:"POST",body:{selector:{$or:[{name:{$regex:this.#o()}},{username:{$regex:this.#o()}},{email:{$regex:this.#o()}}]},fields:["id"],sort:[{[this.sort()]:this.order()}],limit:15},headers:l}),{defaultValue:[],parse:e=>(e?.docs??[]).map(r=>r.id)}),this.#i=this.#r.value,this.list=this.#i.asReadonly(),this.listIsLoading=this.#r.isLoading,this._DbError=j(async()=>{let e=this.#r.error();if(!e)return;let r=e.error?.reason;if(!r){console.error("Unknown error",e),this.#t.show({title:"CouchDB not found?",message:"This is a demo app, and it expects CouchDB to be running locally. Please check the console for more information."});return}if(r.startsWith("No index exists")){console.error("Index not found, creating it");try{await q().catch(t=>console.error("Error creating index",t)),this.#r.reload()}catch(t){console.error("Error creating index",t)}}if(r.startsWith("Database does not exist")){console.error("Database not found, creating it");try{await y(async()=>await this.#s.put(this.baseUrl,{},w)),await P(),this.#r.reload()}catch(t){console.error("Error creating database",t)}}console.error(e),this.#t.show({title:"CouchDB error?",message:"There is an unknown error with the database. Please check the console for more information."})}),this.create=async e=>{let r=`${this.baseUrl}/${e.id}`;try{return await this.#s.put(r,e,w),this.#i.update(t=>[e.id,...t].splice(0,50)),!0}catch(t){return console.error("Error creating user",t),!1}},this.read=B(this.baseUrl,this.#e,{headers:l}),this.uncachedRead=(e,r={headers:l})=>u(()=>c({url:`${this.baseUrl}/${e()}`},r),{defaultValue:{id:e()}}),this.update=async e=>{let r=e.id,t=`${this.baseUrl}/${r}`;if(this.#e.has(t)&&k(this.#e.get(t)?.value(),e))return!0;try{let{rev:o}=await this.#s.put(t,e,w);if(this.#e.has(t)){let i=this.#e.get(t)?.value();i[this.sort()]!==e[this.sort()]&&(console.log(`sort field changed from ${i[this.sort()]} to ${e[this.sort()]}`),this.#n.update(a=>a+1)),this.#e.get(t)?.update(a=>f(c({},e),{_rev:o}))}else console.log("no cache for",t,this.#e);return!0}catch(o){let{error:{error:i,reason:a}}=o??{};if(console.log(o,i,a),a.startsWith("Document update conflict"))try{let d=U(this.#e.get(t)?.value(),e),A=await(await fetch(t,{headers:l})).json();this.#e.get(t)?.set(R(A,d)),this.#t.show({title:"Sorry, we detected a conflict",message:"we have merged in the upstream change, please verify your edit, and submit your changes again"})}catch{this.#t.show({title:"Sorry, but an unrecoverable error happened",message:"please reload your app"})}return!1}},this.delete=async e=>{let r=e.id,t=e._rev,o=`${this.baseUrl}/${r}`;try{await this.#s.delete(o+`?rev=${t}`,w)}catch(i){let{error:{error:a,reason:d}}=i??{};if(console.log(i,a,d),a==="not_found"&&d==="deleted")console.log("already deleted, ignore this log");else return this.#t.show({title:"The data was updated",message:"There was an update on the data you tried to delete. I have loaded the update into the view. Review, and try to delete again if still needed."}),this.#e.get(o)?.reload(),!1}return this.#i.update(i=>i.filter(a=>a!==r)),!0}}#s;#t;#e;#o;#n;#r;#i;static{this.\u0275fac=function(r){return new(r||s)}}static{this.\u0275prov=g({token:s,factory:s.\u0275fac})}}return s})();async function P(){let n=await import("./dist-FPWV7EQZ.js"),e="http://127.0.0.1:5984/relations/";for(let r=0;r<=25e4;r+=1){let t=await I(n.faker),o=await fetch(`${e}/${t.id}`,{method:"PUT",headers:l,body:JSON.stringify(t)})}}async function q(){await $("name"),await $("username"),await $("email"),console.log("Indexes created")}async function $(s){let n="http://127.0.0.1:5984/relations/_index",e={index:{fields:[s]},name:s,type:"json",ddoc:"fieldIndex-"+s},r=await fetch(n,{method:"POST",headers:l,body:JSON.stringify(e)});if(!r.ok)throw new Error(`Error creating index: ${r.statusText}`);let t=await r.json();return console.log("Index created",t),t}export{E as a,p as b,C as c,de as d};
