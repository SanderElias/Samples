import{a as w}from"./chunk-AJROCCCR.js";import{c as I,d as M,e as T,f as N,h as R}from"./chunk-MGEOVUXS.js";import{d as l}from"./chunk-Q7HKI3MB.js";import{b as k}from"./chunk-B64JRXJ4.js";import{$ as m,Jc as p,Kc as $,Lc as j,ea as f,na as D,wa as c}from"./chunk-JMJSAENN.js";import{a as u,b as x}from"./chunk-DAQOROHW.js";function S(o){return Object.entries(o).reduce((a,[e,s])=>{let t=e.split("."),r=t.pop(),i=a;for(let n=0;n<t.length;n++){let h=t[n],v=t[n+1]??r;i=i[h]??=N(v)?[]:{}}return i[r]=s,a},{})}var C=(o,a=new Map,e={})=>{let s=f(D),t=l(()=>{},{injector:s,defaultValue:{}}),r=i=>{if(i===""||i===void 0||i==="-1")return t;let n=`${o}/${i}`;return a.has(n)||p(()=>{let h=l(()=>u({url:`${o}/${i}`},e),{injector:s,defaultValue:{id:i}});a.set(n,h)}),a.get(n)};return i=>$(()=>r(i()))};var B=(()=>{class o{constructor(){this.shown=c(!1),this.message=c(""),this.template=c(void 0),this.title=c("Sorry, something went wrong"),this.type=c("error"),this.dismissButtonText=c("dismiss"),this.showTemplate=e=>{this.template.set(e),this.shown.set(!0)},this.show=({message:e="",title:s=this.title(),type:t=this.type(),dismissButtonText:r=this.dismissButtonText()})=>{this.message.set(e),s&&this.title.set(s),this.type.set(t),this.dismissButtonText.set(r),this.shown.set(!0)},this.close=()=>{this.shown.set(!1),this.template.set(void 0),this.message.set(""),this.type.set("error"),this.title.set("Sorry, something went wrong"),this.dismissButtonText.set("dismiss")},this.isShown=()=>this.shown()}static{this.\u0275fac=function(s){return new(s||o)}}static{this.\u0275prov=m({token:o,factory:o.\u0275fac,providedIn:"root"})}}return o})();var E=(o,a)=>{let e=w(o),s=w(a),t={};for(let r in e)e[r]!==s[r]&&(t[r]=s[r]??e[r]);for(let r in s)r in e||(t[r]=s[r]);return S(t)};var b="http://kapow:5984",O=`Basic ${btoa("admin:password")}`,d={Authorization:O,"Content-Type":"application/json"},g={headers:d},ne=(()=>{class o{constructor(){this.baseUrl=`${b}/relations`,this.#r=f(M),this.#t=f(B),this.#e=new Map,this.filter=c(""),this.#o=I(()=>`(?i)${this.filter()}`,{delay:250}),this.#n=c(0),this.sort=c("name"),this.order=c("asc"),this.#s=l(()=>({url:`${this.baseUrl}/_find?v=${this.#n()}`,method:"POST",body:{selector:{$or:[{name:{$regex:this.#o()}},{username:{$regex:this.#o()}},{email:{$regex:this.#o()}}]},fields:["id"],sort:[{[this.sort()]:this.order()}],limit:15},headers:d}),{defaultValue:[],parse:e=>(e?.docs??[]).map(s=>s.id)}),this.#i=this.#s.value,this.list=this.#i.asReadonly(),this.listIsLoading=this.#s.isLoading,this._DbError=j(async()=>{let e=this.#s.error();if(!e)return;let s=e.error?.reason;if(!s){console.error("Unknown error",e),this.#t.show({title:"CouchDB not found?",message:"This is a demo app, and it expects CouchDB to be running locally. Please check the console for more information."});return}if(s.startsWith("No index exists")){console.error("Index not found, creating it");try{await q().catch(t=>console.error("Error creating index",t)),this.#s.reload()}catch(t){console.error("Error creating index",t)}}if(s.startsWith("Database does not exist")){console.error("Database not found, creating it");try{await p(async()=>await this.#r.put(this.baseUrl,{},g)),await P(),this.#s.reload()}catch(t){console.error("Error creating database",t)}}console.error(e),this.#t.show({title:"CouchDB error?",message:"There is an unknown error with the database. Please check the console for more information."})}),this.create=async e=>{let s=`${this.baseUrl}/${e.id}`;try{return await this.#r.put(s,e,g),this.#i.update(t=>[e.id,...t].splice(0,50)),!0}catch(t){return console.error("Error creating user",t),!1}},this.read=C(this.baseUrl,this.#e,{headers:d}),this.uncachedRead=(e,s={headers:d})=>l(()=>u({url:`${this.baseUrl}/${e()}`},s),{defaultValue:{id:e()}}),this.update=async e=>{let s=e.id,t=`${this.baseUrl}/${s}`;if(this.#e.has(t)&&T(this.#e.get(t)?.value(),e))return!0;try{let{rev:r}=await this.#r.put(t,e,g);if(this.#e.has(t)){let i=this.#e.get(t)?.value();i[this.sort()]!==e[this.sort()]&&(console.log(`sort field changed from ${i[this.sort()]} to ${e[this.sort()]}`),this.#n.update(n=>n+1)),this.#e.get(t)?.update(n=>x(u({},e),{_rev:r}))}else console.log("no cache for",t,this.#e);return!0}catch(r){let{error:{error:i,reason:n}}=r??{};if(console.log(r,i,n),n.startsWith("Document update conflict"))try{let h=E(this.#e.get(t)?.value(),e),U=await(await fetch(t,{headers:d})).json();this.#e.get(t)?.set(R(U,h)),this.#t.show({title:"Sorry, we detected a conflict",message:"we have merged in the upstream change, please verify your edit, and submit your changes again"})}catch{this.#t.show({title:"Sorry, but an unrecoverable error happened",message:"please reload your app"})}return!1}},this.delete=async e=>{let s=e.id,t=e._rev,r=`${this.baseUrl}/${s}`;try{await this.#r.delete(r+`?rev=${t}`,g)}catch(i){let{error:{error:n,reason:h}}=i??{};if(console.log(i,n,h),n==="not_found"&&h==="deleted")console.log("already deleted, ignore this log");else return this.#t.show({title:"The data was updated",message:"There was an update on the data you tried to delete. I have loaded the update into the view. Review, and try to delete again if still needed."}),this.#e.get(r)?.reload(),!1}return this.#i.update(i=>i.filter(n=>n!==s)),!0}}#r;#t;#e;#o;#n;#s;#i;static{this.\u0275fac=function(s){return new(s||o)}}static{this.\u0275prov=m({token:o,factory:o.\u0275fac})}}return o})();async function P(){let a=await import("./dist-BOVLBJIO.js"),e=`${b}/relations/`;for(let s=0;s<=25e4;s+=1){let t=await k(a.faker),r=await fetch(`${e}/${t.id}`,{method:"PUT",headers:d,body:JSON.stringify(t)})}}async function q(){await y("name"),await y("username"),await y("email"),console.log("Indexes created")}async function y(o){let a=`${b}/relations/_index`,e={index:{fields:[o]},name:o,type:"json",ddoc:"fieldIndex-"+o},s=await fetch(a,{method:"POST",headers:d,body:JSON.stringify(e)});if(!s.ok)throw new Error(`Error creating index: ${s.statusText}`);let t=await s.json();return console.log("Index created",t),t}export{B as a,S as b,ne as c};
