import{i as x,j as E,k as S}from"./chunk-COT5DIUW.js";import{I as g,Ib as u,Kb as P,Lb as y,Vb as T,X as I,Xa as s,e as d,eb as f,fb as _,gb as a,ha as c,hb as i,ib as p,jb as F,wb as m,x as h,zb as q}from"./chunk-IWWGYS2Z.js";import"./chunk-G5KKTNWD.js";function b(o,t){if(o&1&&(i(0,"li"),m(1),p()),o&2){let l=t.$implicit;s(1),q("",l.propName," - ",l.value,"")}}function G(o,t){if(o&1&&(i(0,"ul"),f(1,b,2,2,"li",2),p()),o&2){let l=t.ngIf;s(1),a("ngForOf",l)}}function O(o,t){o&1&&(i(0,"h2"),m(1,"Loading ..."),p())}var C=(()=>{let t=class{constructor(){this.requiredProps=[],this.goodToGo$=new d}set _someVar(e){this.someVar=e}set prop1(e){e&&this.setIt("prop1",e)}set prop2(e){e&&this.setIt("prop2",e)}set prop3(e){e&&this.setIt("prop3",e)}setIt(e,r){this.requiredProps.push({propName:e,value:r}),this.requiredProps.length===3&&this.goodToGo$.next(this.requiredProps)}},o=t;return(()=>{t.\u0275fac=function(r){return new(r||t)}})(),(()=>{t.\u0275cmp=c({type:t,selectors:[["app-wait-for-it"]],inputs:{_someVar:["someVar","_someVar"],prop1:"prop1",prop2:"prop2",prop3:"prop3"},standalone:!0,features:[u],decls:4,vars:4,consts:[[4,"ngIf","ngIfElse"],["loading",""],[4,"ngFor","ngForOf"]],template:function(r,n){if(r&1&&(f(0,G,2,1,"ul",0),P(1,"async"),f(2,O,2,0,"ng-template",null,1,T)),r&2){let w=_(3);a("ngIf",y(1,2,n.goodToGo$))("ngIfElse",w)}},dependencies:[E,x,S],encapsulation:2})})(),o})();var k=(()=>{let t=class{constructor(){this.reqProps=[],this.fillthem=h(1e3,1e3).pipe(g(4),I(e=>this.reqProps.push("prop 1"+Math.ceil(Math.random()*100)))).subscribe()}ngOnInit(){}},o=t;return(()=>{t.\u0275fac=function(r){return new(r||t)}})(),(()=>{t.\u0275cmp=c({type:t,selectors:[["app-required-attributes"]],standalone:!0,features:[u],decls:3,vars:3,consts:[[3,"prop1","prop2","prop3"]],template:function(r,n){r&1&&(i(0,"h1"),m(1,"Host for actual components"),p(),F(2,"app-wait-for-it",0)),r&2&&(s(2),a("prop1",n.reqProps[0])("prop2",n.reqProps[1])("prop3",n.reqProps[2]))},dependencies:[C],encapsulation:2})})(),o})();export{k as RequiredAttributesComponent};
