import{c as k,d as R,e as v,f as S,g as $,h as C}from"./chunk-2M4SAYXL.js";import{d as u}from"./chunk-6RK6UIDU.js";import{b as T}from"./chunk-7IZDI77J.js";import{Ac as D,Bc as I,aa as g,fa as m,oa as j,ta as h,zc as y}from"./chunk-CETW4QL6.js";import{a as c,b as f}from"./chunk-DAQOROHW.js";function p(s,n=""){return Object.entries(s).reduce((t,[r,e])=>$(e)?c(c({},t),p(e,`${n}${r}.`)):Array.isArray(e)?c(c({},t),U(e,`${n}${r}.`)):f(c({},t),{[`${n}${r}`]:e}),{})}function U(s,n=""){return s.reduce((t,r,e)=>$(r)?c(c({},t),p(r,`${n}${e}.`)):Array.isArray(r)?c(c({},t),U(r,`${n}${e}.`)):f(c({},t),{[`${n}${e}`]:r}),{})}function A(s){return Object.entries(s).reduce((n,[t,r])=>{let e=t.split("."),o=e.pop(),i=n;for(let a=0;a<e.length;a++){let l=e[a],x=e[a+1]??o;i=i[l]??=S(x)?[]:{}}return i[o]=r,n},{})}var B=(s,n=new Map,t={})=>{let r=m(j),e=u(()=>{},{injector:r,defaultValue:{}}),o=i=>{if(i===""||i===void 0||i==="-1")return e;let a=`${s}/${i}`;return n.has(a)||y(()=>{let l=u(()=>c({url:`${s}/${i}`},t),{injector:r,defaultValue:{id:i}});n.set(a,l)}),n.get(a)};return i=>D(()=>o(i()))};var E=(()=>{class s{constructor(){this.shown=h(!1),this.message=h(""),this.template=h(void 0),this.title=h("Sorry, something went wrong"),this.type=h("error"),this.dismissButtonText=h("dismiss"),this.showTemplate=t=>{this.template.set(t),this.shown.set(!0)},this.show=({message:t="",title:r=this.title(),type:e=this.type(),dismissButtonText:o=this.dismissButtonText()})=>{this.message.set(t),r&&this.title.set(r),this.type.set(e),this.dismissButtonText.set(o),this.shown.set(!0)},this.close=()=>{this.shown.set(!1),this.template.set(void 0),this.message.set(""),this.type.set("error"),this.title.set("Sorry, something went wrong"),this.dismissButtonText.set("dismiss")},this.isShown=()=>this.shown()}static{this.\u0275fac=function(r){return new(r||s)}}static{this.\u0275prov=g({token:s,factory:s.\u0275fac,providedIn:"root"})}}return s})();var F=(s,n)=>{let t=p(s),r=p(n),e={};for(let o in t)t[o]!==r[o]&&(e[o]=r[o]??t[o]);for(let o in r)o in t||(e[o]=r[o]);return A(e)};var M=`Basic ${btoa("admin:password")}`,d={Authorization:M,"Content-Type":"application/json"},w={headers:d},lt=(()=>{class s{constructor(){this.baseUrl="http://127.0.0.1:5984/relations",this.#s=m(R),this.#e=m(E),this.#t=new Map,this.filter=h(""),this.#o=k(()=>`(?i)${this.filter()}`,{delay:250}),this.#n=h(0),this.sort=h("name"),this.order=h("asc"),this.#r=u(()=>({url:`${this.baseUrl}/_find?v=${this.#n()}`,method:"POST",body:{selector:{$or:[{name:{$regex:this.#o()}},{username:{$regex:this.#o()}},{email:{$regex:this.#o()}}]},fields:["id"],sort:[{[this.sort()]:this.order()}],limit:15},headers:d}),{defaultValue:[],parse:t=>(t?.docs??[]).map(r=>r.id)}),this.#i=this.#r.value,this.list=this.#i.asReadonly(),this.listIsLoading=this.#r.isLoading,this._DbError=I(async()=>{let t=this.#r.error();if(!t)return;let r=t.error?.reason;if(!r){console.error("Unknown error",t),this.#e.show({title:"CouchDB not found?",message:"This is a demo app, and it expects CouchDB to be running locally. Please check the console for more information."});return}if(r.startsWith("No index exists")){console.error("Index not found, creating it");try{await H().catch(e=>console.error("Error creating index",e)),this.#r.reload()}catch(e){console.error("Error creating index",e)}}if(r.startsWith("Database does not exist")){console.error("Database not found, creating it");try{await y(async()=>await this.#s.put(this.baseUrl,{},w)),await q(),this.#r.reload()}catch(e){console.error("Error creating database",e)}}console.error(t),this.#e.show({title:"CouchDB error?",message:"There is an unknown error with the database. Please check the console for more information."})}),this.create=async t=>{let r=`${this.baseUrl}/${t.id}`;try{return await this.#s.put(r,t,w),this.#i.update(e=>[t.id,...e].splice(0,50)),!0}catch(e){return console.error("Error creating user",e),!1}},this.read=B(this.baseUrl,this.#t,{headers:d}),this.uncachedRead=(t,r={headers:d})=>u(()=>c({url:`${this.baseUrl}/${t()}`},r),{defaultValue:{id:t()}}),this.update=async t=>{let r=t.id,e=`${this.baseUrl}/${r}`;if(this.#t.has(e)&&v(this.#t.get(e)?.value(),t))return!0;try{let{rev:o}=await this.#s.put(e,t,w);if(this.#t.has(e)){let i=this.#t.get(e)?.value();i[this.sort()]!==t[this.sort()]&&(console.log(`sort field changed from ${i[this.sort()]} to ${t[this.sort()]}`),this.#n.update(a=>a+1)),this.#t.get(e)?.update(a=>f(c({},t),{_rev:o}))}else console.log("no cache for",e,this.#t);return!0}catch(o){let{error:{error:i,reason:a}}=o??{};if(console.log(o,i,a),a.startsWith("Document update conflict"))try{let l=F(this.#t.get(e)?.value(),t),O=await(await fetch(e,{headers:d})).json();this.#t.get(e)?.set(C(O,l)),this.#e.show({title:"Sorry, we detected a conflict",message:"we have merged in the upstream change, please verify your edit, and submit your changes again"})}catch{this.#e.show({title:"Sorry, but an unrecoverable error happened",message:"please reload your app"})}return!1}},this.delete=async t=>{let r=t.id,e=t._rev,o=`${this.baseUrl}/${r}`;try{await this.#s.delete(o+`?rev=${e}`,w)}catch(i){let{error:{error:a,reason:l}}=i??{};if(console.log(i,a,l),a==="not_found"&&l==="deleted")console.log("already deleted, ignore this log");else return this.#e.show({title:"The data was updated",message:"There was an update on the data you tried to delete. I have loaded the update into the view. Review, and try to delete again if still needed."}),this.#t.get(o)?.reload(),!1}return this.#i.update(i=>i.filter(a=>a!==r)),!0}}#s;#e;#t;#o;#n;#r;#i;static{this.\u0275fac=function(r){return new(r||s)}}static{this.\u0275prov=g({token:s,factory:s.\u0275fac})}}return s})();async function q(){let n=await import("./dist-XJHSZ5FI.js"),t="http://127.0.0.1:5984/relations/";for(let r=0;r<=25e4;r+=1){let e=await T(n.faker),o=await fetch(`${t}/${e.id}`,{method:"PUT",headers:d,body:JSON.stringify(e)})}}async function H(){await b("name"),await b("username"),await b("email"),console.log("Indexes created")}async function b(s){let n="http://127.0.0.1:5984/relations/_index",t={index:{fields:[s]},name:s,type:"json",ddoc:"fieldIndex-"+s},r=await fetch(n,{method:"POST",headers:d,body:JSON.stringify(t)});if(!r.ok)throw new Error(`Error creating index: ${r.statusText}`);let e=await r.json();return console.log("Index created",e),e}export{E as a,p as b,A as c,lt as d};
