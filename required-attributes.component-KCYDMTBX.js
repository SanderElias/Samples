import{i as T,j as C,k as x}from"./chunk-GR2PXCGU.js";import{Eb as u,Gb as q,Hb as P,I as g,Rb as v,W as I,Wa as s,ab as f,bb as _,cb as a,db as r,e as d,eb as n,fb as F,ha as c,sb as m,vb as y,x as h}from"./chunk-X5MK5QQ4.js";import"./chunk-G5KKTNWD.js";function w(o,e){if(o&1&&(r(0,"li"),m(1),n()),o&2){let l=e.$implicit;s(1),y("",l.propName," - ",l.value,"")}}function V(o,e){if(o&1&&(r(0,"ul"),f(1,w,2,2,"li",2),n()),o&2){let l=e.ngIf;s(1),a("ngForOf",l)}}function b(o,e){o&1&&(r(0,"h2"),m(1,"Loading ..."),n())}var E=(()=>{let e=class{constructor(){this.requiredProps=[],this.goodToGo$=new d}set _someVar(t){this.someVar=t}set prop1(t){t&&this.setIt("prop1",t)}set prop2(t){t&&this.setIt("prop2",t)}set prop3(t){t&&this.setIt("prop3",t)}setIt(t,i){this.requiredProps.push({propName:t,value:i}),this.requiredProps.length===3&&this.goodToGo$.next(this.requiredProps)}},o=e;return(()=>{e.\u0275fac=function(i){return new(i||e)}})(),(()=>{e.\u0275cmp=c({type:e,selectors:[["app-wait-for-it"]],inputs:{_someVar:["someVar","_someVar"],prop1:"prop1",prop2:"prop2",prop3:"prop3"},standalone:!0,features:[u],decls:4,vars:4,consts:[[4,"ngIf","ngIfElse"],["loading",""],[4,"ngFor","ngForOf"]],template:function(i,p){if(i&1&&(f(0,V,2,1,"ul",0),q(1,"async"),f(2,b,2,0,"ng-template",null,1,v)),i&2){let S=_(3);a("ngIf",P(1,2,p.goodToGo$))("ngIfElse",S)}},dependencies:[C,T,x],encapsulation:2})})(),o})();var j=(()=>{let e=class{constructor(){this.reqProps=[],this.fillthem=h(1e3,1e3).pipe(g(4),I(t=>this.reqProps.push("prop 1"+Math.ceil(Math.random()*100)))).subscribe()}ngOnInit(){}},o=e;return(()=>{e.\u0275fac=function(i){return new(i||e)}})(),(()=>{e.\u0275cmp=c({type:e,selectors:[["app-required-attributes"]],standalone:!0,features:[u],decls:3,vars:3,consts:[[3,"prop1","prop2","prop3"]],template:function(i,p){i&1&&(r(0,"h1"),m(1,"Host for actual components"),n(),F(2,"app-wait-for-it",0)),i&2&&(s(2),a("prop1",p.reqProps[0])("prop2",p.reqProps[1])("prop3",p.reqProps[2]))},dependencies:[E],encapsulation:2})})(),o})();export{j as RequiredAttributesComponent};
