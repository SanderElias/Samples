import{$ as U,J as p,P as f,U as u,V as w,Y as $,f as a,p as o,q as c,s as l,z as m}from"./chunk-BFR4IEYA.js";import{a as r,b as d}from"./chunk-KAT7YFEL.js";var x="0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ",y=(e=2e3)=>Math.floor(Math.random()*e),b=()=>x[y(x.length)];var h=()=>Date.now().toString(36).split("").reverse().map(e=>e+b()).join("");var g=import("./chance-B42Q2VJL.js").then(e=>e).then(({default:e})=>new e);var k=(()=>{class e{constructor(){this.flush$=new a,this.updatedUsers$=new a,this.allUsers$=this.flush$.pipe(l(()=>this.updatedUsers$),w([]),u({bufferSize:1,refCount:!1})),this.admins$=this.allUsers$.pipe(c(s=>s.filter(t=>t.isAdmin))),this.users$=this.allUsers$.pipe(c(s=>s.filter(t=>!t.isAdmin))),this.flushCache()}async addUsers(s){let t=await o(this.allUsers$),i=t.length,n=await Promise.all(Array.from({length:s}).map(async(v,I)=>r({id:h()},await A())));this.updatedUsers$.next(t.concat(n))}async saveUser(s){let t=await o(this.allUsers$),i=t.findIndex(n=>n.id===s.id);if(i>-1)Object.assign(t[i],s);else{let n=h();t.unshift(d(r({},s),{id:n}))}this.updatedUsers$.next(t)}async deleteUser(s){let t=(await this.allUsers$.pipe(f()).toPromise()).filter(i=>i.id!==s.id);this.updatedUsers$.next(t)}async flushCache(){let s=await g;await new Promise(t=>setTimeout(t)),this.flush$.next(),m(0,250).pipe($(()=>this.addUsers(s.integer({min:100,max:400}))),p(20)).subscribe()}static{this.\u0275fac=function(t){return new(t||e)}}static{this.\u0275prov=U({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();async function A(){let e=await g;return{userState:e.integer({min:0,max:3}),username:e.name(),isAdmin:e.bool(),isActive:e.bool(),email:e.email()}}export{k as a};
