import{a as c}from"./chunk-ZDGDS7Z3.js";import{b as d,c as f}from"./chunk-YVNPW273.js";import{C as S,D as a,Gc as A,I,M as q,U as h,V as E,W as O,Z as D,aa as u,c as g,f as v,fa as p,h as b,i as y,l as x,oa as C,q as s,r as j,z as w}from"./chunk-OM65EU35.js";var N=(()=>{class r{constructor(){this.mqtt=import("./mqtt.esm-MACBICDJ.js"),this.client=this.mqtt.then(e=>e.default.connectAsync("ws://10.0.0.100:1884")),this.baseTopic="zigbee2mqtt",this.messages$=new g(e=>{let t=(n,o)=>{try{e.next({topic:n,message:JSON.parse(o.toString())})}catch{e.next({topic:n,message:o.toString()})}};return this.client.then(n=>{console.log("start listening for MQTT messages"),n.on("message",t)}),()=>{this.client.then(n=>{n.off("message",t),n.end(),console.log("MQTT client disconnected")})}}).pipe(h({connector:()=>new v,resetOnComplete:!0})),this.activeTopics=new Map}listenFor(e){let t=this.client;if(typeof e!="string")return console.warn("listenFor expects a string topic, got",e),y;e=e.startsWith(this.baseTopic)?e:`${this.baseTopic}/${e}`;let n=this.activeTopics;if(n.has(e))return n.get(e);let o=this.messages$.pipe(a(({topic:i})=>Array.isArray(i)?i.includes(e):i===e),s(({message:i})=>i),I(100),q(c),D({error(){t.then(i=>i.unsubscribe(e)),n.delete(e),console.log("stopped listening due of error for",e)},complete(){t.then(i=>i.unsubscribe(e)),n.delete(e),console.log("stopped listening for",e)}}),h({connector:()=>new b(1),resetOnComplete:!0,resetOnRefCountZero:()=>w(1005)}));return this.activeTopics.set(e,o),t.then(i=>{i.subscribe([e])}),o}static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=u({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();var P=(()=>{class r{constructor(){this.mqtt=p(N),this.injector=p(C),this.devices=d(this.mqtt.listenFor("bridge/devices"),{initialValue:[],debugName:"ZigbeeServiceDevices"}),this.getDeviceInfo=e=>A(()=>this.#e(e()),{equal:c}),this.getDeviceStatus=e=>f({params:()=>this.#e(e()),stream:({params:t})=>t&&t.friendly_name?this.mqtt.listenFor(`zigbee2mqtt/${t.friendly_name}`):S,injector:this.injector}),this.getStatus=e=>f({params:()=>L(typeof e=="string"?e:e()),stream:({params:t})=>this.mqtt.listenFor(t),injector:this.injector}),this.getMultipleStatuses=e=>f({params:()=>L(e()),stream:({params:t})=>!t||t.length===0?x([]):j(t.map(n=>this.mqtt.listenFor(n).pipe(O(null)))).pipe(s(n=>n.map((o,i)=>typeof o!="object"||o===null?{friendly_name:t[i],power:0,energy:0,current:0}:{friendly_name:t[i],power:o.power??0,energy:o.energy??0,current:o.current??0}))),injector:this.injector,equal:c}),this.#t=this.mqtt.listenFor("bridge/logging").pipe(a(e=>e&&typeof e.message=="string"&&["permit_join","zh:ember: [stack status] network","disabling joining new devices"].some(t=>e.message.toLowerCase().includes(t))),s(k),E(1)),this.joinAllowed=d(this.#t,{initialValue:!1}),this.publish=(e,t)=>new Promise((n,o)=>{typeof t!="string"&&(t=JSON.stringify(t)),this.mqtt.client.then(i=>{i.publish(e,t,void 0,(m,U)=>{m?(console.error("Error publishing to MQTT:",m),o(m)):n(U)})})}),this.#e=e=>this.devices().find(t=>t.ieee_address===e||t.friendly_name===e)}#t;#e;static{this.\u0275fac=function(t){return new(t||r)}}static{this.\u0275prov=u({token:r,factory:r.\u0275fac,providedIn:"root"})}}return r})();function k(r){let l=r.message?.toLowerCase();console.log({lowerLog:l});let e=l?.split("payload '");if(e&&e.length>1)try{let n=JSON.parse(e[1].split("'")[0])?.data?.time??0;return typeof n=="number"&&n>0}catch{return!1}return!!l.includes("open")}var L=r=>{if(!(Array.isArray(r)&&r.length===0)&&r!==null&&!(typeof r=="object"&&Object.keys(r).length===0)&&!(typeof r=="string"&&r.trim()==="")&&!(typeof r=="number"&&(isNaN(r)||r===0)))return r};export{N as a,P as b};
