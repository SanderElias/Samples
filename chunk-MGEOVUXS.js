import{a as H}from"./chunk-Q7HKI3MB.js";import{$ as O,Kc as h,Lc as A,Mc as M,Wc as I,ea as b,ia as C,n as D,na as k,p,pa as S,wa as g}from"./chunk-JMJSAENN.js";import{a as w,b as P}from"./chunk-DAQOROHW.js";var N=e=>e==null?!1:e&&typeof e[Symbol.asyncIterator]=="function",U=e=>typeof e?.then=="function",Q=(e,s,t)=>{let r=g({value:s,error:void 0});try{t=t??b(S)}catch{if(!t)throw new Error("[asyncComputed] destroyRef is mandatory when used outside a injection context");if(!(t instanceof S))throw new Error("[asyncComputed] parameter destroyRef is not a DestroyRef")}let n,o,a=()=>(o?.unsubscribe(),n?.abort()),i=c=>{if(c.aborted)throw new Error("aborted")};t.onDestroy(()=>{a(),d.destroy()});let d=A(async c=>{c(a);try{n=new AbortController;let l=n.signal,u=e(l);if(i(l),D(u))o=u.subscribe({next:f=>{i(l),r.set({value:f})},error:f=>{i(l),r.set({error:f})}});else if(U(u)){let f=await u;i(l),r.set({value:f})}else if(N(u))for await(let f of u)i(l),r.set({value:f});else r.set({value:u})}catch(l){l.message!=="aborted"&&r.set({error:l})}},{manualCleanup:!0,debugName:"asyncComputed"});return h(()=>{let c=r();if(c.error)throw I()&&console.warn(`
  [asyncComputed] error: ${c.error.message}
    The error was thrown inside the callback function. The best way to handle
    this error is  inside that function. However, asyncComputed will rethrow
    the error to make sure that the error is not silently ignored.
    The error will be reset when one of the signals inside the function changes.
    Until that happens, the error will be re-thrown by Angular on every use
    of the signal. (usually every change detection cycle)
    (this warning is only shown in dev mode)
`),c.error;return c.value})},X=(e,s,t)=>{let r=g({value:s,error:void 0,status:"init",stream:"init"}),n=u=>r.update(f=>w(w({},f),u));try{t=t??b(S)}catch{if(!t)throw new Error("[asyncComputed] destroyRef is mandatory when used outside a injection context");if(!(t instanceof S))throw new Error("[asyncComputed] parameter destroyRef is not a DestroyRef")}let o,a,i=()=>(a?.unsubscribe(),o?.abort()),d=u=>{if(u.aborted)throw new Error("aborted")};t.onDestroy(()=>{i(),c.destroy()});let c=A(async u=>{u(i),n({status:"triggered"});try{o=new AbortController;let f=o.signal,y=e(f);if(d(f),n({status:"loading",stream:"init"}),D(y))n({stream:"ongoing"}),a=y.subscribe({next:m=>{d(f),r.update(q=>P(w({},q),{value:m,error:void 0,status:"awaiting"}))},error:m=>{d(f),n({error:m,value:void 0,status:"error",stream:"done"})},complete:()=>{d(f),n({stream:"done"})}});else if(U(y)){let m=await y;d(f),n({value:m,error:void 0,status:"loaded",stream:"done"})}else if(N(y)){n({stream:"ongoing"});for await(let m of y)d(f),n({value:m,error:void 0,status:"awaiting"});n({stream:"done"})}else n({value:y,error:void 0,status:"loaded",stream:"done"})}catch(f){f.message!=="aborted"&&n({error:f})}},{manualCleanup:!0}),l=M({source:()=>r().value,computation:u=>u});return h(()=>{let u=r();return{value:l,error:u.error,status:u.status,stream:u.stream}})},B=(e,s)=>{let t,r,n=s.delay||500,o=g(0);return M({source:()=>({value:e(),time:o()}),computation:({value:i,time:d})=>(d===0&&(r=i),t||(t=Date.now()+n,setTimeout(()=>o.set(d+1),n+1)),t<Date.now()&&(r=i,t=void 0),r),equal:s.equal})},Y=(e,s)=>B(e,s).asReadonly(),v=class{constructor(){this.promise=new Promise((s,t)=>{this.resolve=s,this.reject=t})}},G=(e=b(k))=>(s,t)=>C(e,()=>L(s,t)),L=(e,s)=>{let t=new v,r=A(n=>{let o=e();try{s(o)&&(t.resolve(o),r.destroy())}catch(a){t.reject(a),r.destroy()}n(()=>{t.reject(new Error("[awaitSignal] the provided signal was destroyed before the predicate was satisfied"))})},{debugName:"awaitSignal"});return t.promise};var Z=(()=>{class e{constructor(){this.#t=b(H),this.#e={DELETE:g(0),HEAD:g(0),PATCH:g(0),POST:g(0),PUT:g(0),GET:g(0)},this.busyMethods={DELETE:h(()=>this.#e.DELETE()!==0),HEAD:h(()=>this.#e.HEAD()!==0),PATCH:h(()=>this.#e.PATCH()!==0),POST:h(()=>this.#e.POST()!==0),PUT:h(()=>this.#e.PUT()!==0),GET:h(()=>this.#e.GET()!==0)},this.isBusy=h(()=>Object.values(this.#e).some(t=>t()!==0)),this.#n=G(),this.#r=async(t,r)=>{await this.#n(this.#e[t],n=>n===0),this.#e[t].update(n=>n+1);try{return await r}finally{this.#e[t].update(n=>n-1)}}}#t;#e;#n;#r;delete(t,r={}){return this.#r("DELETE",p(this.#t.delete(t,r)))}head(t,r){return this.#r("HEAD",p(this.#t.head(t,r)))}patch(t,r,n){return this.#r("PATCH",p(this.#t.patch(t,r,n)))}post(t,r,n={}){return this.#r("POST",p(this.#t.post(t,r,n)))}put(t,r,n={}){return this.#r("PUT",p(this.#t.put(t,r,n)))}get(t,r={}){return this.#r("GET",p(this.#t.get(t,r)))}static{this.\u0275fac=function(r){return new(r||e)}}static{this.\u0275prov=O({token:e,factory:e.\u0275fac,providedIn:"root"})}}return e})();function R(e){return typeof e?.getMonth=="function"}var T=(e,s=new Map)=>{if(e===null||typeof e!="object")return e;if(R(e))return new Date(e.getTime());if(s.has(e))return s.get(e);let t=n=>T(n,s);if(e instanceof RegExp){let n=new RegExp(e.source,e.flags);return n.lastIndex=e.lastIndex,s.set(e,n),n}if(e instanceof Set){let n=new Set;return s.set(e,n),[...e].forEach(o=>n.add(t(o))),n}if(e instanceof Map){let n=new Map;return s.set(e,n),[...e.entries()].forEach(o=>n.set(t(o[0]),t(o[1]))),n}if(Array.isArray(e)){let n=new Array(e.length);return s.set(e,n),e.forEach((o,a)=>n[a]=t(o)),n}let r=w({},e);s.set(e,r);for(let[n,o]of Object.entries(r))o!==null&&typeof o=="object"&&(r[n]=t(o));return r};function j(e,s){if(e===s)return!0;if(e&&s&&typeof e=="object"&&typeof s=="object"){if(e.constructor!==s.constructor)return!1;let t,r;if(Array.isArray(e)){if(!Array.isArray(s)||(t=e.length,t!=s.length))return!1;for(r=t;r--!==0;)if(!j(e[r],s[r]))return!1;return!0}if(e instanceof Map&&s instanceof Map){if(e.size!==s.size)return!1;for(r of e.entries())if(!s.has(r[0]))return!1;for(r of e.entries())if(!j(r[1],s.get(r[0])))return!1;return!0}if(e instanceof Set&&s instanceof Set){if(e.size!==s.size)return!1;for(r of e.entries())if(!s.has(r[0]))return!1;return!0}if(e instanceof Date&&s instanceof Date)return e.getTime()===s.getTime();if(ArrayBuffer.isView(e)&&ArrayBuffer.isView(s)){if(t=e.length,t!=s.length)return!1;for(r=t;r--!==0;)if(e[r]!==s[r])return!1;return!0}if(e.constructor===RegExp)return e.source===s.source&&e.flags===s.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===s.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===s.toString();let n=Object.keys(e);if(t=n.length,t!==Object.keys(s).length)return!1;for(r=t;r--!==0;)if(!Object.prototype.hasOwnProperty.call(s,n[r]))return!1;for(r=t;r--!==0;){let o=n[r];if(!j(e[o],s[o]))return!1}return!0}return e!==e&&s!==s}var x=e=>{let s=parseInt(e,10);return!isNaN(s)&&`${s}`===e},E=e=>!(typeof e!="object"||e===null||Array.isArray(e)||R(e)),V=(e,s,t={},r=[])=>{let n=i=>typeof t.iterableMergeStrategy=="function"?t.iterableMergeStrategy(i):t.iterableMergeStrategy??"concat",o=t.skipAssignUndefined??!1;if(!(Array.isArray(e)||E(e))||!(Array.isArray(s)||E(s)))throw new Error("[deepMergeObjects] target and source must be objects or arrays");let a=T(e);for(let[i,d]of Object.entries(s)){let c=d,l=a[i];if(o&&c===void 0)continue;let u=[...r,i];if(Array.isArray(c))switch(n(u)){case"concat":{a[i]=(l??[]).concat(c);break}case"replace":{a[i]=T(c);break}case"merge":{a[i]=F(l??[],c,t,u);break}}else if(c instanceof Set)if(n(u)==="replace"||l===void 0)a[i]=new Set(c);else{if(!(l instanceof Set))throw new Error("[deepMergeObjects] Cannot merge or concat a Set with a non-Set");a[i]=new Set([...l,...c])}else if(c instanceof Map)if(n(u)==="replace"||l===void 0)a[i]=new Map(c);else{if(!(l instanceof Map))throw new Error("[deepMergeObjects] Cannot merge or concat a Map with a non-Map");a[i]=new Map([...l,...c])}else E(c)?a[i]=V(E(l)?l:{},c,t,u):c instanceof Date?a[i]=new Date(c):a[i]=c}return a},F=(e,s,t={},r=[])=>{let n=e.reduce((o,a,i)=>(o[i]=T(a),o),[]);return s.forEach((o,a)=>{let i=n[a];Array.isArray(o)?i=F(i??[],o,t,r):E(o)?i=V(i??{},o,t,r):i=T(o),n[a]=i}),n};export{Q as a,X as b,Y as c,Z as d,j as e,x as f,E as g,V as h};
